{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PasswordReset=()=>{const[email,setEmail]=useState('');// Handle input change\nconst handleEmailChange=e=>{setEmail(e.target.value);};// Handle back button click\nconst handleBack=e=>{e.preventDefault();window.location.href='/';// Redirect to the homepage\n};// Handle form submission for password reset\nconst handleSubmit=async e=>{e.preventDefault();// Perform form validation (e.g., check for empty email)\nif(!email){alert(\"Please enter your email.\");return;}try{const response=await fetch('resetPassword',{method:'POST',headers:{'Content-Type':'application/json','X-CSRFToken':getCSRFToken()// Adjust based on your CSRF token implementation\n},body:JSON.stringify({email})});if(response.ok){alert('A reset code has been sent to your email.');// Optionally, redirect or reset form if necessary\n}else{alert('Failed to send reset code. Please try again.');}}catch(error){console.error('Error during password reset:',error);alert('An error occurred while sending the reset code.');}};// Function to get CSRF token\nconst getCSRFToken=()=>{var _document$cookie$spli;return(_document$cookie$spli=document.cookie.split('; ').find(item=>item.startsWith('csrftoken=')))===null||_document$cookie$spli===void 0?void 0:_document$cookie$spli.split('=')[1];};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"h2\",{style:{textAlign:'center'},children:\"FORGOT PASSWORD\"})}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleBack,children:/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center'},children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Back\",name:\"backButton\"})})}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,children:/*#__PURE__*/_jsx(\"table\",{border:\"1\",style:{margin:'auto',marginTop:'20px'},children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Email\",name:\"email\",value:email,onChange:handleEmailChange,required:true})})}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{align:\"center\",children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\",name:\"getCode\",value:\"Get Code\"})})})]})})})]});};export default PasswordReset;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","PasswordReset","email","setEmail","handleEmailChange","e","target","value","handleBack","preventDefault","window","location","href","handleSubmit","alert","response","fetch","method","headers","getCSRFToken","body","JSON","stringify","ok","error","console","_document$cookie$spli","document","cookie","split","find","item","startsWith","children","style","textAlign","onSubmit","type","name","border","margin","marginTop","placeholder","onChange","required","align"],"sources":["C:/Users/Bono/Desktop/OneDrive/OneDrive/Documents/Documents/3rd yr IT/Semester2/CMPG323/Front-end-NexTech/Front-end/frontend-bananaboat/src/components/reset-password.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PasswordReset = () => {\r\n  const [email, setEmail] = useState('');\r\n\r\n  // Handle input change\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  // Handle back button click\r\n  const handleBack = (e) => {\r\n    e.preventDefault();\r\n    window.location.href = '/'; // Redirect to the homepage\r\n  };\r\n\r\n  // Handle form submission for password reset\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Perform form validation (e.g., check for empty email)\r\n    if (!email) {\r\n      alert(\"Please enter your email.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('resetPassword', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': getCSRFToken(), // Adjust based on your CSRF token implementation\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('A reset code has been sent to your email.');\r\n        // Optionally, redirect or reset form if necessary\r\n      } else {\r\n        alert('Failed to send reset code. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during password reset:', error);\r\n      alert('An error occurred while sending the reset code.');\r\n    }\r\n  };\r\n\r\n  // Function to get CSRF token\r\n  const getCSRFToken = () => {\r\n    return document.cookie\r\n      .split('; ')\r\n      .find(item => item.startsWith('csrftoken='))\r\n      ?.split('=')[1];\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h2 style={{ textAlign: 'center' }}>FORGOT PASSWORD</h2>\r\n      </header>\r\n\r\n      {/* Back Button Form */}\r\n      <form onSubmit={handleBack}>\r\n        <div style={{ textAlign: 'center' }}>\r\n          <input type=\"submit\" value=\"Back\" name=\"backButton\" />\r\n        </div>\r\n      </form>\r\n\r\n      {/* Password Reset Form */}\r\n      <form onSubmit={handleSubmit}>\r\n        <table border=\"1\" style={{ margin: 'auto', marginTop: '20px' }}>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={handleEmailChange}\r\n                  required\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td align=\"center\">\r\n                <input type=\"submit\" name=\"getCode\" value=\"Get Code\" />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}