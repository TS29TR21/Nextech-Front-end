{"ast":null,"code":"var _jsxFileName = \"A:\\\\Project\\\\Frontend\\\\Front-end\\\\frontend-bananaboat\\\\src\\\\components\\\\reset-password.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordReset = () => {\n  _s();\n  const [email, setEmail] = useState('');\n\n  // Handle input change\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n  };\n\n  // Handle back button click\n  const handleBack = e => {\n    e.preventDefault();\n    window.location.href = '/'; // Redirect to the homepage\n  };\n\n  // Handle form submission for password reset\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Perform form validation (e.g., check for empty email)\n    if (!email) {\n      alert(\"Please enter your email.\");\n      return;\n    }\n    try {\n      const response = await fetch('resetPassword', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCSRFToken() // Adjust based on your CSRF token implementation\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (response.ok) {\n        alert('A reset code has been sent to your email.');\n        // Optionally, redirect or reset form if necessary\n      } else {\n        alert('Failed to send reset code. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error during password reset:', error);\n      alert('An error occurred while sending the reset code.');\n    }\n  };\n\n  // Function to get CSRF token\n  const getCSRFToken = () => {\n    var _document$cookie$spli;\n    return (_document$cookie$spli = document.cookie.split('; ').find(item => item.startsWith('csrftoken='))) === null || _document$cookie$spli === void 0 ? void 0 : _document$cookie$spli.split('=')[1];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"FORGOT PASSWORD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleBack,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Back\",\n          name: \"backButton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          margin: 'auto',\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Email\",\n                name: \"email\",\n                value: email,\n                onChange: handleEmailChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                name: \"getCode\",\n                value: \"Get Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordReset, \"qu4bovk5U4+JuhY7vxbmswqixrc=\");\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PasswordReset","_s","email","setEmail","handleEmailChange","e","target","value","handleBack","preventDefault","window","location","href","handleSubmit","alert","response","fetch","method","headers","getCSRFToken","body","JSON","stringify","ok","error","console","_document$cookie$spli","document","cookie","split","find","item","startsWith","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","border","margin","marginTop","placeholder","onChange","required","align","_c","$RefreshReg$"],"sources":["A:/Project/Frontend/Front-end/frontend-bananaboat/src/components/reset-password.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst PasswordReset = () => {\n  const [email, setEmail] = useState('');\n\n  // Handle input change\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  // Handle back button click\n  const handleBack = (e) => {\n    e.preventDefault();\n    window.location.href = '/'; // Redirect to the homepage\n  };\n\n  // Handle form submission for password reset\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Perform form validation (e.g., check for empty email)\n    if (!email) {\n      alert(\"Please enter your email.\");\n      return;\n    }\n\n    try {\n      const response = await fetch('resetPassword', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': getCSRFToken(), // Adjust based on your CSRF token implementation\n        },\n        body: JSON.stringify({ email }),\n      });\n\n      if (response.ok) {\n        alert('A reset code has been sent to your email.');\n        // Optionally, redirect or reset form if necessary\n      } else {\n        alert('Failed to send reset code. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error during password reset:', error);\n      alert('An error occurred while sending the reset code.');\n    }\n  };\n\n  // Function to get CSRF token\n  const getCSRFToken = () => {\n    return document.cookie\n      .split('; ')\n      .find(item => item.startsWith('csrftoken='))\n      ?.split('=')[1];\n  };\n\n  return (\n    <div>\n      <header>\n        <h2 style={{ textAlign: 'center' }}>FORGOT PASSWORD</h2>\n      </header>\n\n      {/* Back Button Form */}\n      <form onSubmit={handleBack}>\n        <div style={{ textAlign: 'center' }}>\n          <input type=\"submit\" value=\"Back\" name=\"backButton\" />\n        </div>\n      </form>\n\n      {/* Password Reset Form */}\n      <form onSubmit={handleSubmit}>\n        <table border=\"1\" style={{ margin: 'auto', marginTop: '20px' }}>\n          <tbody>\n            <tr>\n              <td>\n                <input\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  value={email}\n                  onChange={handleEmailChange}\n                  required\n                />\n              </td>\n            </tr>\n            <tr>\n              <td align=\"center\">\n                <input type=\"submit\" name=\"getCode\" value=\"Get Code\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </form>\n    </div>\n  );\n};\n\nexport default PasswordReset;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMO,iBAAiB,GAAIC,CAAC,IAAK;IAC/BF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMC,UAAU,GAAIH,CAAC,IAAK;IACxBA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG,CAAC,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAOR,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;;IAElB;IACA,IAAI,CAACP,KAAK,EAAE;MACVY,KAAK,CAAC,0BAA0B,CAAC;MACjC;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;QAC5CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,aAAa,EAAEC,YAAY,CAAC,CAAC,CAAE;QACjC,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEpB;QAAM,CAAC;MAChC,CAAC,CAAC;MAEF,IAAIa,QAAQ,CAACQ,EAAE,EAAE;QACfT,KAAK,CAAC,2CAA2C,CAAC;QAClD;MACF,CAAC,MAAM;QACLA,KAAK,CAAC,8CAA8C,CAAC;MACvD;IACF,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDV,KAAK,CAAC,iDAAiD,CAAC;IAC1D;EACF,CAAC;;EAED;EACA,MAAMK,YAAY,GAAGA,CAAA,KAAM;IAAA,IAAAO,qBAAA;IACzB,QAAAA,qBAAA,GAAOC,QAAQ,CAACC,MAAM,CACnBC,KAAK,CAAC,IAAI,CAAC,CACXC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,UAAU,CAAC,YAAY,CAAC,CAAC,cAAAN,qBAAA,uBAFvCA,qBAAA,CAGHG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,oBACE9B,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MAAAkC,QAAA,eACElC,OAAA;QAAImC,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAF,QAAA,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eAGTxC,OAAA;MAAMyC,QAAQ,EAAEhC,UAAW;MAAAyB,QAAA,eACzBlC,OAAA;QAAKmC,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAF,QAAA,eAClClC,OAAA;UAAO0C,IAAI,EAAC,QAAQ;UAAClC,KAAK,EAAC,MAAM;UAACmC,IAAI,EAAC;QAAY;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAGPxC,OAAA;MAAMyC,QAAQ,EAAE3B,YAAa;MAAAoB,QAAA,eAC3BlC,OAAA;QAAO4C,MAAM,EAAC,GAAG;QAACT,KAAK,EAAE;UAAEU,MAAM,EAAE,MAAM;UAAEC,SAAS,EAAE;QAAO,CAAE;QAAAZ,QAAA,eAC7DlC,OAAA;UAAAkC,QAAA,gBACElC,OAAA;YAAAkC,QAAA,eACElC,OAAA;cAAAkC,QAAA,eACElC,OAAA;gBACE0C,IAAI,EAAC,MAAM;gBACXK,WAAW,EAAC,OAAO;gBACnBJ,IAAI,EAAC,OAAO;gBACZnC,KAAK,EAAEL,KAAM;gBACb6C,QAAQ,EAAE3C,iBAAkB;gBAC5B4C,QAAQ;cAAA;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACLxC,OAAA;YAAAkC,QAAA,eACElC,OAAA;cAAIkD,KAAK,EAAC,QAAQ;cAAAhB,QAAA,eAChBlC,OAAA;gBAAO0C,IAAI,EAAC,QAAQ;gBAACC,IAAI,EAAC,SAAS;gBAACnC,KAAK,EAAC;cAAU;gBAAA6B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACtC,EAAA,CA7FID,aAAa;AAAAkD,EAAA,GAAblD,aAAa;AA+FnB,eAAeA,aAAa;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}